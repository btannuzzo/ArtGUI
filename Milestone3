StatusReport3: Updates

J Bujarski: 
  * The best way to determine the generated picture from the input text would be a web scraper.
    * Pictures can be searched for from Google, and pixel-by-pixel broken down to determine what an "average" picture would be.
    * Libraries to include: requests, BeautifulSoup
  * Picture data can be stored in a 2d array, with ratios created for the downloaded pictures
    * Thus, smaller pictures are spread out to cover as many pixels as larger pictures
    * Average RGB values per pixel stored in an element
    * Overall picture updated on completion of a picture being added.
    * User can input the number of images to use for the "Average" creation
      * Multiprocessing can be used to process several images at once.
    * Libraries to include: pandas, matplotlib, multiprocessing, flask (!!!)
    
    
Betty Tannuzzo:
  * Along with keeping the images in a 2D array, we can map certain images to words. 
    * Perhaps we can do this by creating a dictionary with the words being searched as keys and the urls for images as values
    * One downside to this is that we would have to limit the amount of words searched due to it being pretty impossible to have every 
      word from the dictionary 
    * We should probably search Google for it (as J mentioned above) and somehow save that image url to that specific word in the 
      database
  * Libraries to include: all the ones mentioned above, plus os, xgoogle, re, urlparse, GeoIP, sys
